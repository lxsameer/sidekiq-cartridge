#!/bin/bash

source $OPENSHIFT_CARTRIDGE_SDK_BASH

source ${OPENSHIFT_RUBY_DIR}lib/ruby_context
source ${OPENSHIFT_SIDEKIQ_DIR}lib/util

SIDEKIQ_LOG_FILE="${OPENSHIFT_SIDEKIQ_DIR}log/sidekiq.log"
SIDEKIQ_CONFIG="${OPENSHIFT_SIDEKIQ_DIR}config/sidekiq.yml"
SIDEKIQ_PID_FILE="${OPENSHIFT_SIDEKIQ_DIR}run/sidekiq.pid"

function start() {
  retval=0
  if ! have_redis; then
    echo "Sidekiq require redis cartridge to be installed:"
    echo
    echo "rhc add-cartridge http://cartreflect-claytondev.rhcloud.com/reflect?github=smarterclayton/openshift-redis-cart"
    exit 1
  fi
  echo "Starting sidekiq"
  pushd ${OPENSHIFT_REPO_DIR} >/dev/null
  if use_rails; then
    client_result "Running in a Rails env."
    ruby_context_with_gempath "sidekiq -d -e production --config ${SIDEKIQ_CONFIG}"
    sidekiq_monitoring start
  else
    if use_workers; then
      client_result "Running in a Rack env."
      ruby_context_with_gempath "sidekiq -d -e production --config ${SIDEKIQ_CONFIG} -r ./workers.rb"
      sidekiq_monitoring start
    else
      echo "ERROR: No Sidekiq workers detected."
    fi
  fi
  retval=$?
  popd >/dev/null
  return $retval
}

function stop() {
  sidekiq_pid=$(cat $SIDEKIQ_PID_FILE 2>/dev/null)
  if [ -n "$sidekiq_pid" -a sidekiq_is_runnning ]; then
    echo "Stopping sidekiq"
    kill -15 "$sidekiq_pid" 2>/dev/null
    if sidekiq_is_runnning; then
      sleep 3 && kill -9 "$sidekiq_pid" 2>/dev/null
    fi
    sidekiq_monitoring stop
  else
    echo "Sidekiq is not running."
    rm -f ${SIDEKIQ_PID_FILE}
  fi
  return 0
}

function restart() {
    stop
    start
}

function status() {
  return 0
}

function reload() {
  restart
}

function tidy() {
  echo "Nothing to clean."
}

case "$1" in
  start) start ;;
  stop) stop ;;
  restart) restart ;;
  status) status ;;
  reload) reload ;;
  tidy) tidy ;;
  *) exit 0
esac
